// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AchievementsColumns holds the columns for the "achievements" table.
	AchievementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "organizer", Type: field.TypeString, Nullable: true},
		{Name: "level", Type: field.TypeString, Nullable: true},
	}
	// AchievementsTable holds the schema information for the "achievements" table.
	AchievementsTable = &schema.Table{
		Name:       "achievements",
		Columns:    AchievementsColumns,
		PrimaryKey: []*schema.Column{AchievementsColumns[0]},
	}
	// BiodataColumns holds the columns for the "biodata" table.
	BiodataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString},
		{Name: "gender", Type: field.TypeString},
		{Name: "birthplace", Type: field.TypeString},
		{Name: "birthdate", Type: field.TypeTime},
		{Name: "telephone", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "id_type", Type: field.TypeString},
		{Name: "id_number", Type: field.TypeString},
		{Name: "address_id", Type: field.TypeString},
		{Name: "post_code_id", Type: field.TypeString},
		{Name: "district_id", Type: field.TypeString},
		{Name: "city_id", Type: field.TypeString},
		{Name: "province_id", Type: field.TypeString},
		{Name: "address_living", Type: field.TypeString},
		{Name: "post_code_living", Type: field.TypeString},
		{Name: "district_living", Type: field.TypeString},
		{Name: "city_living", Type: field.TypeString},
		{Name: "province_living", Type: field.TypeString},
		{Name: "entrance", Type: field.TypeString},
		{Name: "entrance_number", Type: field.TypeString},
		{Name: "major", Type: field.TypeString},
		{Name: "university", Type: field.TypeString},
	}
	// BiodataTable holds the schema information for the "biodata" table.
	BiodataTable = &schema.Table{
		Name:       "biodata",
		Columns:    BiodataColumns,
		PrimaryKey: []*schema.Column{BiodataColumns[0]},
	}
	// EducationsColumns holds the columns for the "educations" table.
	EducationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "grade", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "enter", Type: field.TypeString},
		{Name: "graduate", Type: field.TypeString},
	}
	// EducationsTable holds the schema information for the "educations" table.
	EducationsTable = &schema.Table{
		Name:       "educations",
		Columns:    EducationsColumns,
		PrimaryKey: []*schema.Column{EducationsColumns[0]},
	}
	// FamiliesColumns holds the columns for the "families" table.
	FamiliesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "gender", Type: field.TypeString},
		{Name: "birthplace", Type: field.TypeString},
		{Name: "birthdate", Type: field.TypeTime},
		{Name: "education", Type: field.TypeString},
		{Name: "job", Type: field.TypeString},
	}
	// FamiliesTable holds the schema information for the "families" table.
	FamiliesTable = &schema.Table{
		Name:       "families",
		Columns:    FamiliesColumns,
		PrimaryKey: []*schema.Column{FamiliesColumns[0]},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "talk", Type: field.TypeString},
		{Name: "write", Type: field.TypeString},
		{Name: "read", Type: field.TypeString},
		{Name: "listen", Type: field.TypeString},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// NetworthsColumns holds the columns for the "networths" table.
	NetworthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "value", Type: field.TypeInt64},
	}
	// NetworthsTable holds the schema information for the "networths" table.
	NetworthsTable = &schema.Table{
		Name:       "networths",
		Columns:    NetworthsColumns,
		PrimaryKey: []*schema.Column{NetworthsColumns[0]},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "period", Type: field.TypeString, Nullable: true},
		{Name: "position", Type: field.TypeString, Nullable: true},
		{Name: "detail", Type: field.TypeString, Nullable: true},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
	}
	// RegistersColumns holds the columns for the "registers" table.
	RegistersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status_one", Type: field.TypeInt},
		{Name: "status_two", Type: field.TypeInt, Default: 0},
		{Name: "online_interview", Type: field.TypeString, Nullable: true},
		{Name: "interview_time", Type: field.TypeTime, Nullable: true},
	}
	// RegistersTable holds the schema information for the "registers" table.
	RegistersTable = &schema.Table{
		Name:       "registers",
		Columns:    RegistersColumns,
		PrimaryKey: []*schema.Column{RegistersColumns[0]},
	}
	// ScholarshipsColumns holds the columns for the "scholarships" table.
	ScholarshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "start_step_one", Type: field.TypeTime},
		{Name: "start_step_two", Type: field.TypeTime},
		{Name: "end_step_one", Type: field.TypeTime},
		{Name: "end_step_two", Type: field.TypeTime},
		{Name: "announce_step_one", Type: field.TypeTime},
		{Name: "announce_step_two", Type: field.TypeTime},
		{Name: "online_test", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt, Default: 0},
	}
	// ScholarshipsTable holds the schema information for the "scholarships" table.
	ScholarshipsTable = &schema.Table{
		Name:       "scholarships",
		Columns:    ScholarshipsColumns,
		PrimaryKey: []*schema.Column{ScholarshipsColumns[0]},
	}
	// SocialMediaColumns holds the columns for the "social_media" table.
	SocialMediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "instagram", Type: field.TypeString, Nullable: true},
		{Name: "facebook", Type: field.TypeString, Nullable: true},
		{Name: "tiktok", Type: field.TypeString, Nullable: true},
		{Name: "twitter", Type: field.TypeString, Nullable: true},
	}
	// SocialMediaTable holds the schema information for the "social_media" table.
	SocialMediaTable = &schema.Table{
		Name:       "social_media",
		Columns:    SocialMediaColumns,
		PrimaryKey: []*schema.Column{SocialMediaColumns[0]},
	}
	// TalentsColumns holds the columns for the "talents" table.
	TalentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// TalentsTable holds the schema information for the "talents" table.
	TalentsTable = &schema.Table{
		Name:       "talents",
		Columns:    TalentsColumns,
		PrimaryKey: []*schema.Column{TalentsColumns[0]},
	}
	// TrainingsColumns holds the columns for the "trainings" table.
	TrainingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "period", Type: field.TypeString, Nullable: true},
		{Name: "year", Type: field.TypeString, Nullable: true},
		{Name: "organizer", Type: field.TypeString, Nullable: true},
		{Name: "certificate", Type: field.TypeString, Nullable: true},
	}
	// TrainingsTable holds the schema information for the "trainings" table.
	TrainingsTable = &schema.Table{
		Name:       "trainings",
		Columns:    TrainingsColumns,
		PrimaryKey: []*schema.Column{TrainingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// AchievementRegisterColumns holds the columns for the "achievement_register" table.
	AchievementRegisterColumns = []*schema.Column{
		{Name: "achievement_id", Type: field.TypeInt},
		{Name: "register_id", Type: field.TypeInt},
	}
	// AchievementRegisterTable holds the schema information for the "achievement_register" table.
	AchievementRegisterTable = &schema.Table{
		Name:       "achievement_register",
		Columns:    AchievementRegisterColumns,
		PrimaryKey: []*schema.Column{AchievementRegisterColumns[0], AchievementRegisterColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "achievement_register_achievement_id",
				Columns:    []*schema.Column{AchievementRegisterColumns[0]},
				RefColumns: []*schema.Column{AchievementsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "achievement_register_register_id",
				Columns:    []*schema.Column{AchievementRegisterColumns[1]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// BiodataRegisterColumns holds the columns for the "biodata_register" table.
	BiodataRegisterColumns = []*schema.Column{
		{Name: "biodata_id", Type: field.TypeInt},
		{Name: "register_id", Type: field.TypeInt},
	}
	// BiodataRegisterTable holds the schema information for the "biodata_register" table.
	BiodataRegisterTable = &schema.Table{
		Name:       "biodata_register",
		Columns:    BiodataRegisterColumns,
		PrimaryKey: []*schema.Column{BiodataRegisterColumns[0], BiodataRegisterColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "biodata_register_biodata_id",
				Columns:    []*schema.Column{BiodataRegisterColumns[0]},
				RefColumns: []*schema.Column{BiodataColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "biodata_register_register_id",
				Columns:    []*schema.Column{BiodataRegisterColumns[1]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EducationRegisterColumns holds the columns for the "education_register" table.
	EducationRegisterColumns = []*schema.Column{
		{Name: "education_id", Type: field.TypeInt},
		{Name: "register_id", Type: field.TypeInt},
	}
	// EducationRegisterTable holds the schema information for the "education_register" table.
	EducationRegisterTable = &schema.Table{
		Name:       "education_register",
		Columns:    EducationRegisterColumns,
		PrimaryKey: []*schema.Column{EducationRegisterColumns[0], EducationRegisterColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_register_education_id",
				Columns:    []*schema.Column{EducationRegisterColumns[0]},
				RefColumns: []*schema.Column{EducationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "education_register_register_id",
				Columns:    []*schema.Column{EducationRegisterColumns[1]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// FamilyRegisterColumns holds the columns for the "family_register" table.
	FamilyRegisterColumns = []*schema.Column{
		{Name: "family_id", Type: field.TypeInt},
		{Name: "register_id", Type: field.TypeInt},
	}
	// FamilyRegisterTable holds the schema information for the "family_register" table.
	FamilyRegisterTable = &schema.Table{
		Name:       "family_register",
		Columns:    FamilyRegisterColumns,
		PrimaryKey: []*schema.Column{FamilyRegisterColumns[0], FamilyRegisterColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "family_register_family_id",
				Columns:    []*schema.Column{FamilyRegisterColumns[0]},
				RefColumns: []*schema.Column{FamiliesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "family_register_register_id",
				Columns:    []*schema.Column{FamilyRegisterColumns[1]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LanguageRegisterColumns holds the columns for the "language_register" table.
	LanguageRegisterColumns = []*schema.Column{
		{Name: "language_id", Type: field.TypeInt},
		{Name: "register_id", Type: field.TypeInt},
	}
	// LanguageRegisterTable holds the schema information for the "language_register" table.
	LanguageRegisterTable = &schema.Table{
		Name:       "language_register",
		Columns:    LanguageRegisterColumns,
		PrimaryKey: []*schema.Column{LanguageRegisterColumns[0], LanguageRegisterColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "language_register_language_id",
				Columns:    []*schema.Column{LanguageRegisterColumns[0]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "language_register_register_id",
				Columns:    []*schema.Column{LanguageRegisterColumns[1]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RegisterUserColumns holds the columns for the "register_user" table.
	RegisterUserColumns = []*schema.Column{
		{Name: "register_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// RegisterUserTable holds the schema information for the "register_user" table.
	RegisterUserTable = &schema.Table{
		Name:       "register_user",
		Columns:    RegisterUserColumns,
		PrimaryKey: []*schema.Column{RegisterUserColumns[0], RegisterUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "register_user_register_id",
				Columns:    []*schema.Column{RegisterUserColumns[0]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "register_user_user_id",
				Columns:    []*schema.Column{RegisterUserColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RegisterScholarshipColumns holds the columns for the "register_scholarship" table.
	RegisterScholarshipColumns = []*schema.Column{
		{Name: "register_id", Type: field.TypeInt},
		{Name: "scholarship_id", Type: field.TypeInt},
	}
	// RegisterScholarshipTable holds the schema information for the "register_scholarship" table.
	RegisterScholarshipTable = &schema.Table{
		Name:       "register_scholarship",
		Columns:    RegisterScholarshipColumns,
		PrimaryKey: []*schema.Column{RegisterScholarshipColumns[0], RegisterScholarshipColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "register_scholarship_register_id",
				Columns:    []*schema.Column{RegisterScholarshipColumns[0]},
				RefColumns: []*schema.Column{RegistersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "register_scholarship_scholarship_id",
				Columns:    []*schema.Column{RegisterScholarshipColumns[1]},
				RefColumns: []*schema.Column{ScholarshipsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AchievementsTable,
		BiodataTable,
		EducationsTable,
		FamiliesTable,
		LanguagesTable,
		NetworthsTable,
		OrganizationsTable,
		RegistersTable,
		ScholarshipsTable,
		SocialMediaTable,
		TalentsTable,
		TrainingsTable,
		UsersTable,
		AchievementRegisterTable,
		BiodataRegisterTable,
		EducationRegisterTable,
		FamilyRegisterTable,
		LanguageRegisterTable,
		RegisterUserTable,
		RegisterScholarshipTable,
	}
)

func init() {
	AchievementRegisterTable.ForeignKeys[0].RefTable = AchievementsTable
	AchievementRegisterTable.ForeignKeys[1].RefTable = RegistersTable
	BiodataRegisterTable.ForeignKeys[0].RefTable = BiodataTable
	BiodataRegisterTable.ForeignKeys[1].RefTable = RegistersTable
	EducationRegisterTable.ForeignKeys[0].RefTable = EducationsTable
	EducationRegisterTable.ForeignKeys[1].RefTable = RegistersTable
	FamilyRegisterTable.ForeignKeys[0].RefTable = FamiliesTable
	FamilyRegisterTable.ForeignKeys[1].RefTable = RegistersTable
	LanguageRegisterTable.ForeignKeys[0].RefTable = LanguagesTable
	LanguageRegisterTable.ForeignKeys[1].RefTable = RegistersTable
	RegisterUserTable.ForeignKeys[0].RefTable = RegistersTable
	RegisterUserTable.ForeignKeys[1].RefTable = UsersTable
	RegisterScholarshipTable.ForeignKeys[0].RefTable = RegistersTable
	RegisterScholarshipTable.ForeignKeys[1].RefTable = ScholarshipsTable
}
