// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BiodataColumns holds the columns for the "biodata" table.
	BiodataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// BiodataTable holds the schema information for the "biodata" table.
	BiodataTable = &schema.Table{
		Name:       "biodata",
		Columns:    BiodataColumns,
		PrimaryKey: []*schema.Column{BiodataColumns[0]},
	}
	// RegistersColumns holds the columns for the "registers" table.
	RegistersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status_one", Type: field.TypeInt},
		{Name: "status_two", Type: field.TypeInt, Default: 0},
		{Name: "online_interview", Type: field.TypeString, Nullable: true},
		{Name: "interview_time", Type: field.TypeTime, Nullable: true},
		{Name: "scholarship_registers", Type: field.TypeInt, Nullable: true},
		{Name: "user_registers", Type: field.TypeInt, Nullable: true},
	}
	// RegistersTable holds the schema information for the "registers" table.
	RegistersTable = &schema.Table{
		Name:       "registers",
		Columns:    RegistersColumns,
		PrimaryKey: []*schema.Column{RegistersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "registers_scholarships_registers",
				Columns:    []*schema.Column{RegistersColumns[5]},
				RefColumns: []*schema.Column{ScholarshipsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "registers_users_registers",
				Columns:    []*schema.Column{RegistersColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ScholarshipsColumns holds the columns for the "scholarships" table.
	ScholarshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "start_step_one", Type: field.TypeTime},
		{Name: "start_step_two", Type: field.TypeTime},
		{Name: "end_step_one", Type: field.TypeTime},
		{Name: "end_step_two", Type: field.TypeTime},
		{Name: "announce_step_one", Type: field.TypeTime},
		{Name: "announce_step_two", Type: field.TypeTime},
		{Name: "online_test", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt},
	}
	// ScholarshipsTable holds the schema information for the "scholarships" table.
	ScholarshipsTable = &schema.Table{
		Name:       "scholarships",
		Columns:    ScholarshipsColumns,
		PrimaryKey: []*schema.Column{ScholarshipsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BiodataTable,
		RegistersTable,
		ScholarshipsTable,
		UsersTable,
	}
)

func init() {
	RegistersTable.ForeignKeys[0].RefTable = ScholarshipsTable
	RegistersTable.ForeignKeys[1].RefTable = UsersTable
}
