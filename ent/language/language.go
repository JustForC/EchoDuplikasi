// Code generated by entc, DO NOT EDIT.

package language

const (
	// Label holds the string label denoting the language type in the database.
	Label = "language"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTalk holds the string denoting the talk field in the database.
	FieldTalk = "talk"
	// FieldWrite holds the string denoting the write field in the database.
	FieldWrite = "write"
	// FieldRead holds the string denoting the read field in the database.
	FieldRead = "read"
	// FieldListen holds the string denoting the listen field in the database.
	FieldListen = "listen"
	// EdgeRegister holds the string denoting the register edge name in mutations.
	EdgeRegister = "register"
	// Table holds the table name of the language in the database.
	Table = "languages"
	// RegisterTable is the table that holds the register relation/edge. The primary key declared below.
	RegisterTable = "language_register"
	// RegisterInverseTable is the table name for the Register entity.
	// It exists in this package in order to avoid circular dependency with the "register" package.
	RegisterInverseTable = "registers"
)

// Columns holds all SQL columns for language fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTalk,
	FieldWrite,
	FieldRead,
	FieldListen,
}

var (
	// RegisterPrimaryKey and RegisterColumn2 are the table columns denoting the
	// primary key for the register relation (M2M).
	RegisterPrimaryKey = []string{"language_id", "register_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
