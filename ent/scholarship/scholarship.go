// Code generated by entc, DO NOT EDIT.

package scholarship

const (
	// Label holds the string label denoting the scholarship type in the database.
	Label = "scholarship"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStartStepOne holds the string denoting the startstepone field in the database.
	FieldStartStepOne = "start_step_one"
	// FieldStartStepTwo holds the string denoting the startsteptwo field in the database.
	FieldStartStepTwo = "start_step_two"
	// FieldEndStepOne holds the string denoting the endstepone field in the database.
	FieldEndStepOne = "end_step_one"
	// FieldEndStepTwo holds the string denoting the endsteptwo field in the database.
	FieldEndStepTwo = "end_step_two"
	// FieldAnnounceStepOne holds the string denoting the announcestepone field in the database.
	FieldAnnounceStepOne = "announce_step_one"
	// FieldAnnounceStepTwo holds the string denoting the announcesteptwo field in the database.
	FieldAnnounceStepTwo = "announce_step_two"
	// FieldOnlineTest holds the string denoting the onlinetest field in the database.
	FieldOnlineTest = "online_test"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeRegisters holds the string denoting the registers edge name in mutations.
	EdgeRegisters = "registers"
	// Table holds the table name of the scholarship in the database.
	Table = "scholarships"
	// RegistersTable is the table that holds the registers relation/edge.
	RegistersTable = "registers"
	// RegistersInverseTable is the table name for the Register entity.
	// It exists in this package in order to avoid circular dependency with the "register" package.
	RegistersInverseTable = "registers"
	// RegistersColumn is the table column denoting the registers relation/edge.
	RegistersColumn = "scholarship_registers"
)

// Columns holds all SQL columns for scholarship fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldStartStepOne,
	FieldStartStepTwo,
	FieldEndStepOne,
	FieldEndStepTwo,
	FieldAnnounceStepOne,
	FieldAnnounceStepTwo,
	FieldOnlineTest,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
