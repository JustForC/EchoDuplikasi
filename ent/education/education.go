// Code generated by entc, DO NOT EDIT.

package education

const (
	// Label holds the string label denoting the education type in the database.
	Label = "education"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGrade holds the string denoting the grade field in the database.
	FieldGrade = "grade"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldProvince holds the string denoting the province field in the database.
	FieldProvince = "province"
	// FieldCity holds the string denoting the city field in the database.
	FieldCity = "city"
	// FieldEnter holds the string denoting the enter field in the database.
	FieldEnter = "enter"
	// FieldGraduate holds the string denoting the graduate field in the database.
	FieldGraduate = "graduate"
	// EdgeRegister holds the string denoting the register edge name in mutations.
	EdgeRegister = "register"
	// Table holds the table name of the education in the database.
	Table = "educations"
	// RegisterTable is the table that holds the register relation/edge. The primary key declared below.
	RegisterTable = "education_register"
	// RegisterInverseTable is the table name for the Register entity.
	// It exists in this package in order to avoid circular dependency with the "register" package.
	RegisterInverseTable = "registers"
)

// Columns holds all SQL columns for education fields.
var Columns = []string{
	FieldID,
	FieldGrade,
	FieldName,
	FieldProvince,
	FieldCity,
	FieldEnter,
	FieldGraduate,
}

var (
	// RegisterPrimaryKey and RegisterColumn2 are the table columns denoting the
	// primary key for the register relation (M2M).
	RegisterPrimaryKey = []string{"education_id", "register_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
