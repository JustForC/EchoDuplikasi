// Code generated by entc, DO NOT EDIT.

package training

const (
	// Label holds the string label denoting the training type in the database.
	Label = "training"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPeriod holds the string denoting the period field in the database.
	FieldPeriod = "period"
	// FieldYear holds the string denoting the year field in the database.
	FieldYear = "year"
	// FieldOrganizer holds the string denoting the organizer field in the database.
	FieldOrganizer = "organizer"
	// FieldCertificate holds the string denoting the certificate field in the database.
	FieldCertificate = "certificate"
	// EdgeRegister holds the string denoting the register edge name in mutations.
	EdgeRegister = "register"
	// Table holds the table name of the training in the database.
	Table = "trainings"
	// RegisterTable is the table that holds the register relation/edge. The primary key declared below.
	RegisterTable = "training_register"
	// RegisterInverseTable is the table name for the Register entity.
	// It exists in this package in order to avoid circular dependency with the "register" package.
	RegisterInverseTable = "registers"
)

// Columns holds all SQL columns for training fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPeriod,
	FieldYear,
	FieldOrganizer,
	FieldCertificate,
}

var (
	// RegisterPrimaryKey and RegisterColumn2 are the table columns denoting the
	// primary key for the register relation (M2M).
	RegisterPrimaryKey = []string{"training_id", "register_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
